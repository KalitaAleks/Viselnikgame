<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAEABADoAgAANgAAABAQEAABAAQAKAEAAB4DAAAwMBAAAQAEAGgGAABGBAAAKAAAACAA
        AABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAzAAAAAAAAAAAAAAAAAAA7uzAAAAAAAAAAAAAAAAADu7uzAAAAAAAAAAAA
        AAAAMzM7swAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAADuzAAAAAAAAAAAAAAAAAAA7swAAAAAA
        AAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAADuzAAAAAAAAAAAAAAAAAAA7swAAAAAAAAAAAzMzMzMzO7Mz
        MzMzMzMAADu7u7u7u7u7u7u7u7swAAADMzMzMzM7szMzMzOzAAAAAAAAAAAAO7swAAAAMAAAAAAAAAAA
        AAO7sAAAAAAAAAAAAAAAAAAAA7MAAAAAAAAAAAAAAAAAAAA7sAAAAAAAAAAAADMzMzMzM7sAAAAAAAAA
        AAO7u7u7u7u7sAAAAAAAAAAAMzMzMzMzMzMAAAAAAzMAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAA
        MAADuzAAAAAAAAAAAAAAADAAADuzMzMzMzMzMzMzMzOzAAADu7u7u7u7u7u7u7u7uzAAADszMzMzM7Mz
        MzMzMzMwAAADAAAAAAOzAAAAAAAAAAAAAAAAAAADswAAAAAAAAAAAAAAAAAAAzMAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///////P////B////gP///wB///4Af//+AH///+B////gf///4H///+B//4AAAAcAA
        AAGAAAADwAAAB+AAAA//+A+f//4H//8AA//+AAH//AAA344AAE8HAABnA///4wAAAAGAAAAAwAAAAOAA
        AADwAAAA+/wf+f/8H////j//KAAAABAAAAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
        AAAAAIAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP//
        /wAAAAAAAAAAAAAAALuwAAAAAAAAALAAAAAAAAAAsAAAAAAAAACwAAAAC7u7u7u7u7AAAAAAuwAAAAAA
        AAALAAAAAAAAAACwAAAAALu7u7sAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAsAu7u7u7u7uwAAAAALAA
        AAAAAAAAAAAAAPx////4P///+D////4///+AAf//AAD//4AB////H///8A///+AH///wD///n/n//wAA
        //8AAP//gAH///4///8oAAAAMAAAAGAAAAABAAQAAAAAAIAEAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAA7uzAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7MAAAAAAAAAAAAAAAAA
        AAAAAAAAADMzO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAD
        MzMzMzMzMzMzO7MzMzMzMzMzMzMzAAA7u7u7u7u7u7u7u7u7u7u7u7u7u7swAAADMzMzMzMzMzMzO7Mz
        MzMzMzMzM7MAAAAAAAAAAAAAAAAAO7MAAAAAAAAAADAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAA7swAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7
        MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7swAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuzAAAAAAAAAAAAAA
        AAAAAzMzMzMzMzMzO7MAAAAAAAAAAAAAAAAAO7u7u7u7u7u7u7swAAAAAAAAAAAAAAAAAzMzMzMzMzMz
        MzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7swAAAAAAAAAAAAAA
        AAAAAAAAAAMAAAA7swAAAAAAAAAAAAAAAAAAAAAAAAMAAAADuzMzMzMzMzMzMzMzMzMzMzMzMzswAAAA
        O7u7u7u7u7u7u7u7u7u7u7u7u7uzAAAAA7MzMzMzMzMzO7MzMzMzMzMzMzMzAAAAADAAAAAAAAAAO7MA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7MAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/////////////8//////////B/////////4D/////////AH////////4Af////////
        gB/////////4H/////////gf////////+B/////////4H/////////gf////////+B/////////4H///
        //////gf////////+B/////////4H/////////gf////////+B//////4AAAAAAB///AAAAAAAH//4AA
        AAAAA///wAAAAAAH///gAAAAAA//////+A//n//////4B/////////wD/////////gH/////////AP//
        ////4AAAf//////AAAA//////4AAAB//////wAAAD//////gAAAP///////////f///H/////8///4P/
        ////z///gf/////H//+AAAAAAAP//8AAAAAAAf//4AAAAAAB///wAAAAAAH///gAAAAAA////f/4H//z
        ///9//gf////////+B/////////8P////////////////w==
</value>
  </data>
</root>